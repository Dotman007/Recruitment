@model IEnumerable<ConsolidatedPlatformForRecruitmentAgencies.Models.Job>

@{
    ViewBag.Title = "JobList";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}


@using (Html.BeginForm("JobList", "Applicant", FormMethod.Post))
{
<div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Job Role", htmlAttributes: new { @class = "col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("JobId", null, htmlAttributes: new { @class = "form-control custom-select", @id = "example-text-input" })
            @*@Html.ValidationMessageFor(model => model.JobCategory.JobCategoryId, "", new { @class = "text-danger" })*@
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Job Field", htmlAttributes: new { @class = "col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("JobCategoryId", null, htmlAttributes: new { @class = "form-control custom-select", @id = "example-text-input" })
            @*@Html.ValidationMessageFor(model => model.JobCategory.JobCategoryId, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Qualification", htmlAttributes: new { @class = "col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("QualificationId", null, htmlAttributes: new { @class = "form-control custom-select", @id = "example-text-input" })
            @*@Html.ValidationMessageFor(model => model.QualificationId, "", new { @class = "text-danger" })*@
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Course", htmlAttributes: new { @class = "col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control custom-select", @id = "example-text-input" })
            @*@Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })*@
        </div>
    </div>



    <div class="form-group">
        @Html.Label("Grade", htmlAttributes: new { @class = "col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("GradeId", null, htmlAttributes: new { @class = "form-control custom-select", @id = "example-text-input" })
            @*@Html.ValidationMessageFor(model => model.GradeId, "", new { @class = "text-danger" })*@
        </div>
    </div>



</div>
}


@if (Model.Count() == 0)
{
    <div>
        No Job Found Yet
    </div>
}
else
{

<h2>JobList</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Applicant.ApplicantUniqueNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Company.CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Course.CourseName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Grade.GradeName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JobCategory.JobCategoryName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Qualification.QualificationName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JobRole)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JobDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Applied)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DeadLine)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateApplied)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Scheduled)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Applicant.ApplicantUniqueNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Company.CompanyName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Course.CourseName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Grade.GradeName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.JobCategory.JobCategoryName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Qualification.QualificationName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.JobRole)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.JobDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Applied)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DeadLine)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateApplied)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Scheduled)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.JobId }) |
            @Html.ActionLink("Details", "Details", new { id = item.JobId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.JobId })
        </td>
    </tr>
}

</table>
}